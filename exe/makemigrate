#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

#require "arxutils"
require "arxutils_sqlite3"
require "enop/version"
#require "enop/enop"

#require 'enop'
require 'simpleoptparse'

AR_VERSION=6.0

db_scheme_ary = [
  {
    :flist => %W!noitem!,
    :classname => "Countdatetime",
    :classname_downcase => "countdatetime",
    :items => [
              ["countdatetime" , "datetime", "false"],
            ],
    :plural => "countdatetimes",
    :ar_version => AR_VERSION,
  },

  {
    :flist => %W!noitem!,
    :classname => "Evnb",
    :classname_downcase => "evnb",
    :items => [
              ["time_id" , "integer", "false"],
              ["ennb_id" , "integer", "false"],
            ],
    :plural => "evnbs",
    :ar_version => AR_VERSION,
  },

  {
    :flist => %W!noitem invalid current!,
    :classname => "Ennblist",
    :classname_downcase => "ennblist",

    :items => [
              ["stack" , "string", "false"],
              ["notebook" , "string", "false"],
              ["count" , "integer", "false"],
              ["tag_count" , "integer", "false"],
              ["start_datetime" , "datetime", "false"],
             ],
    :plural => "ennblists",
    :ar_version => AR_VERSION,
  },
]

opts = { 
  db_dir: Arxutils_Sqlite3::Dbutil::DB_DIR ,
  relation: {
    module: ["Enop" , "Dbutil"],
    filename: "dbrelation.rb",
    dir: "lib/enop/dbutil"
  }
}
banner = "Usage: bundle exec ruby exe/makemigrate [--makeconfig|--remigrate|--mysql|--sqlite3]"

Simpleoptparse::Simpleoptparse.parse( ARGV , opts , banner , Enop::VERSION , nil ){ |parser|
  parser.on('-c','--makeconfig'  ) { |x| opts["makeconfig"] = true }
  parser.on('-r','--remigrate'  ) { |x| opts["remigrate"] = true }
  parser.on('--mysql'  ) { |x| opts["dbconfig"] = Arxutils_Sqlite3::Dbutil::DBCONFIG_MYSQL }
  parser.on('--sqlite3'  ) { |x| opts["dbconfig"] = Arxutils_Sqlite3::Dbutil::DBCONFIG_SQLITE3 }
}
opts["makeconfig"] = !opts["makeconfig"].nil?
opts["remigrate"] = !opts["remigrate"].nil?

opts["dbconfig"] = Arxutils_Sqlite3::Dbutil::DBCONFIG_SQLITE3 unless opts["dbconfig"]

env = ENV.fetch('ENV', nil)
#env ||= "development"
env ||= "production"

Arxutils_Sqlite3::Migrate.migrate(
                          Arxutils_Sqlite3::Dbutil::DB_DIR,
                          Arxutils_Sqlite3::Dbutil::CONFIG_DIR,
                          Arxutils_Sqlite3::Dbutil::DATABASELOG,
                          Arxutils_Sqlite3::Dbutil::MIGRATE_DIR,
                          env,
                          db_scheme_ary,
                          opts["dbconfig"],
                          opts,
                          )
